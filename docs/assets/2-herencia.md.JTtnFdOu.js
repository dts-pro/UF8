import{_ as d,C as o,c as p,o as h,a4 as r,G as i,j as s,w as l,a as e}from"./chunks/framework.DIQKRKrM.js";const c="/UF8/uf8/esquema_superclasse.png",u="/UF8/uf8/classe_persona.jpg",k="/UF8/uf8/classe_alumne.jpg",m="/UF8/uf8/classe_professor.jpg",g="/UF8/uf8/classe_principal.jpg",E="/UF8/uf8/eixida.jpg",P=JSON.parse('{"title":"2. Herència","description":"","frontmatter":{},"headers":[],"relativePath":"2-herencia.md","filePath":"2-herencia.md"}'),b={name:"2-herencia.md"};function y(v,a,f,_,F,A){const t=o("PluginTabsTab"),n=o("PluginTabs");return h(),p("div",null,[a[12]||(a[12]=r('<h1 id="_2-herencia" tabindex="-1">2. Herència <a class="header-anchor" href="#_2-herencia" aria-label="Permalink to &quot;2. Herència&quot;">​</a></h1><h2 id="_2-1-introduccio" tabindex="-1">2.1 Introducció <a class="header-anchor" href="#_2-1-introduccio" aria-label="Permalink to &quot;2.1 Introducció&quot;">​</a></h2><p>L&#39;herència és una de les capacitats més importants i distintives de la POO. Consisteix en derivar o <strong>estendre una classe nova a partir d&#39;una altra ja existent de manera que la classe nova hereta tots els atributs i mètodes de la classe ja existent</strong>.</p><p>A la classe ja existent se la denomina <strong>superclasse</strong>, classe base o classe pare. A la nova classe se la denomina <strong>subclasse</strong>, classe derivada o classe filla.</p><div class="warning custom-block"><p class="custom-block-title">ATENCIÓ</p><p>Quan derivem (o estenem) una nova classe, aquesta hereta totes les dades i mètodes membre de la classe existent.</p></div><p>Per exemple, si tenim un programa que treballarà amb alumnes i professors, aquests tindran atributs comuns com el nom, DNI, adreça o telèfon. Però cadascun d&#39;ells tindran atributs específics que no tinguen els altres. Per exemple els i les alumnes tindran el número d&#39;expedient, el cicle i curs que cursen i les seues notes; per la seua part els i les docents tindran el codi de professor, el departament al qual pertanyen, els mòduls que imparteixen i el seu horari. Per tant, en aquest cas el millor és declarar una classe <em>Persona</em> amb els atributs comuns (Nom, DNI, Adreça, Telèfon) i dos subclasses <em>Alumne</em> i <em>Professor</em> que hereten de Persona (a més de tindre els seus propis atributs). És important remarcar que Alumne i Professor també heretaran tots els mètodes de Persona.</p><p><img src="'+c+'" alt="Esquema d&#39;una superclasse i subclasses"></p>',7)),i(n,null,{default:l(()=>[i(t,{label:"Java"},{default:l(()=>a[0]||(a[0]=[s("p",null,[e("A Java s'utilitza la paraula reservada "),s("strong",null,[s("code",null,"extends")]),e(" per a indicar herència:")],-1),s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Alumne"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," extends"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"...")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Professor"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," extends"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"...")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[0]})]),_:1}),a[13]||(a[13]=s("h2",{id:"_2-2-constructors-de-classes-derivades",tabindex:"-1"},[e("2.2 Constructors de classes derivades "),s("a",{class:"header-anchor",href:"#_2-2-constructors-de-classes-derivades","aria-label":'Permalink to "2.2 Constructors de classes derivades"'},"​")],-1)),a[14]||(a[14]=s("p",null,[e("En la programació orientada a objectes, quan una classe deriva d'una altra, el constructor de la subclasse ha de garantir que també s'inicialitzen correctament els atributs heretats de la superclasse, a més dels seus propis. Per aconseguir-ho, normalment es proporciona un mecanisme per "),s("strong",null,"cridar al constructor de la classe base des del constructor de la classe derivada"),e(". Aquesta crida s'ha de fer generalment com a "),s("strong",null,"primera instrucció dins del constructor de la subclasse"),e(" i és necessària si la classe base requereix paràmetres per a ser inicialitzada.")],-1)),i(n,null,{default:l(()=>[i(t,{label:"Java"},{default:l(()=>[a[4]||(a[4]=s("p",null,[e("En el cas concret de Java, aquesta crida es realitza mitjançant la paraula reservada "),s("code",null,"super()"),e(", a la qual es passen com a arguments els valors necessaris pel constructor de la superclasse. Si no es crida explícitament a "),s("code",null,"super()"),e(", el compilador intentarà cridar automàticament al constructor per defecte de la classe base (és a dir, un constructor sense paràmetres). Si aquest constructor per defecte no existeix, es produirà un error de compilació.")],-1)),i(n,null,{default:l(()=>[i(t,{label:"Superclasse Persona"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    protected"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," String nom;")]),e(`
`),s("span",{class:"line"}),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"nom"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"        this"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".nom "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," nom;")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[1]}),i(t,{label:"Subclasse Alumne"},{default:l(()=>a[2]||(a[2]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Alumne"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," extends"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    private"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," String grup;")]),e(`
`),s("span",{class:"line"}),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Alumne"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"nom"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"grup"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"        super"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(nom);         "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Crida al constructor de Persona")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"        this"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".grup "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," grup;   "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Inicialització pròpia")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[2]}),i(t,{label:"Subclasse Professor"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Professor"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," extends"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Persona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    private"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," String departament;")]),e(`
`),s("span",{class:"line"}),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Professor"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"nom"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"departament"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"        super"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(nom);               "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Crida al constructor de Persona")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"        this"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".departament "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," departament;")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[3]})]),_:1})]),_:1,__:[4]})]),_:1}),a[15]||(a[15]=r('<h2 id="_2-3-metodes-heretats-i-sobreescrits" tabindex="-1">2.3 Mètodes heretats i sobreescrits <a class="header-anchor" href="#_2-3-metodes-heretats-i-sobreescrits" aria-label="Permalink to &quot;2.3 Mètodes heretats i sobreescrits&quot;">​</a></h2><p>Hem vist que una subclasse hereta els atributs i mètodes de la superclasse; a més, es poden incloure nous atributs i nous mètodes. D&#39;altra banda, pot ocórrer que algun dels mètodes que existeixen en la superclasse no ens valguen en la subclasse (tal com estan programats) i necessitem adequar-los a les característiques de la subclasse. Això pot fer-se mitjançant la sobreescriptura de mètodes.</p><p><strong>Un mètode està sobreescrit quan es programa de nou en la classe derivada</strong>. Per exemple, el mètode <em>mostrarPersona()</em> de la classe <em>Persona</em> el necessitaríem sobreescriure en les classes <em>Alumne</em> i <em>Professor</em> per a mostrar també els nous atributs.</p><p>El mètode sobreescrit en la classe derivada podria reutilitzar el mètode de la classe base, si és necessari, i a continuació imprimir els nous atributs.</p>',4)),i(n,null,{default:l(()=>[i(t,{label:"Java"},{default:l(()=>a[5]||(a[5]=[s("p",null,[e("En Java podem accedir a mètodes definits en la classe base mitjançant "),s("code",null,"super.mètode()"),e("."),s("br"),e(" El mètode mostrarPersona sobreescrit en les classes derivades podria ser:")],-1),s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"super"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"mostrarPersona"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Anomenada al mètode de la classe base")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"System.out."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"println"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(…); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Imprimim els atributs exclusius de la classe derivada")])])])],-1)])),_:1,__:[5]})]),_:1}),a[16]||(a[16]=r('<h2 id="_2-4-classes-i-metodes-finals" tabindex="-1">2.4 Classes i mètodes finals <a class="header-anchor" href="#_2-4-classes-i-metodes-finals" aria-label="Permalink to &quot;2.4 Classes i mètodes finals&quot;">​</a></h2><p>En el paradigma orientat a objectes, de vegades és necessari impedir que algunes classes s’hereten o que certs mètodes es sobreescriguen. Per a això, es fa servir el concepte de &quot;finalització&quot;, que permet marcar elements com a no extensibles o no modificables.</p><p><strong>Classes finals</strong></p><ul><li>Una <strong>classe final és aquella que no es pot estendre ni heretar</strong>. Quan una classe es declara com a final, s’assegura que cap altra classe no puga crear-ne una subclasse.</li><li>Aquest recurs s’utilitza quan es vol garantir que la lògica interna o la interfície d’una classe no siga alterada per cap derivació, per motius de seguretat, rendiment o coherència del disseny.</li></ul><p><strong>Mètodes finals</strong></p><ul><li>Un <strong>mètode final és aquell que no pot ser redefinit en cap subclasse</strong>. La seua implementació roman inalterable, fins i tot si la classe on resideix es pot heretar.</li><li>Declarar un mètode com a final ajuda a mantindre la coherència d’una funcionalitat crítica i a evitar canvis involuntaris per part de les subclasses.</li></ul>',6)),i(n,null,{default:l(()=>[i(t,{label:"Java"},{default:l(()=>a[6]||(a[6]=[s("p",null,'En Java, el concepte de "final" està integrat com a paraula reservada i s’aplica tant a classes com a mètodes i atributs:',-1),s("ol",null,[s("li",null,[s("p",null,[s("strong",null,"Classes finals")]),s("ul",null,[s("li",null,"Sintaxi:")]),s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," final"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," NomDeClasse"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { … }")])])])]),s("ul",null,[s("li",null,"Efecte: Ninguna altra classe podrà heretar de NomDeClasse. Si s’intenta fer-ho, el compilador donarà error.")])]),s("li",null,[s("p",null,[s("strong",null,"Mètodes finals")]),s("ul",null,[s("li",null,"Sintaxi (dins d’una classe que no siga final):")]),s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," final"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," metodeExemple"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() { … }")])])])]),s("ul",null,[s("li",null,"Efecte: Cap subclasse no podrà redefinir metodeExemple(). Si una subclasse intenta fer-ho, el compilador detectarà la incompatibilitat de signatura per a un mètode final.")])]),s("li",null,[s("p",null,[s("strong",null,"Atributs finals")]),s("ul",null,[s("li",null,"Sintaxi:")]),s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," final"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," CONSTANT;")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// o bé")]),e(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," static"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," final"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," CONSTANT "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 100"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])])]),s("ul",null,[s("li",null,"Efecte: Les variables declarades com a final s’inicialitzen una sola vegada (normalment al declarar-les o dins del constructor) i no poden ser modificades durant la vida de l’objecte o, si són estàtiques, de la classe.")])])],-1),s("div",{class:"important custom-block github-alert"},[s("p",{class:"custom-block-title"},[s("strong",null,"IMPORTANT!")]),s("p",null,[e("En Java, per tant, la paraula "),s("code",null,"final"),e(' fa efectiu el concepte de "no extensible" per a classes, "no sobreescrivible" per a mètodes i "no reassignable" per a variables, garantint així la fermesa del disseny i la integritat de les dades.')])],-1)])),_:1,__:[6]})]),_:1}),a[17]||(a[17]=r('<h2 id="_2-5-acces-a-membres-derivats" tabindex="-1">2.5 Accés a membres derivats <a class="header-anchor" href="#_2-5-acces-a-membres-derivats" aria-label="Permalink to &quot;2.5 Accés a membres derivats&quot;">​</a></h2><p>Encara que una subclasse inclou tots els membres de la seua superclasse, no podrà accedir als que estiguen declarats com a privats. Si en algun exemple intentàrem accedir des de la classe derivada a un atribut privat (definit a la classe base), obtindríem un error de compilació.</p><p>Per permetre que els atributs siguen visibles només per a les subclasses (i no per a cap altra classe), els podem declarar com a protegits. D’aquesta manera, aquests membres quedaran accessibles únicament des de la classe original i les classes que en deriven, però mai des d’altres parts del programa.</p><div class="important custom-block github-alert"><p class="custom-block-title"><strong>IMPORTANT!</strong></p><p>Un <strong>atribut protegit</strong> és un membre d’una classe al qual només poden accedir:</p><ul><li>La mateixa classe on està definit.</li><li>Les classes que en deriven (subclasses).</li></ul><p>En canvi, no és accessible des de classes independents que no formen part de la jerarquia d’herència. Això permet compartir dades amb subclasses, però alhora mantindre-les ocultes per a la resta del codi.</p></div><h2 id="_2-6-exemple-3" tabindex="-1">2.6 Exemple 3 <a class="header-anchor" href="#_2-6-exemple-3" aria-label="Permalink to &quot;2.6 Exemple 3&quot;">​</a></h2><p>En aquest exemple crearem les classe <strong>Persona</strong> i les seues classes heretades: <strong>Alumne</strong> i <strong>Professor</strong>. En la classe Persona crearem el constructor, un mètode per a mostrar els atributs i els <em>getters</em> i <em>setters</em>. <strong>Les classes Alumne i Professor heretaran de la classe Persona</strong> i cadascuna tindrà els seus propis atributs, un constructor que anomenarà també al constructor de la classe Persona, un mètode per a mostrar els seus atributs, que també cridarà al mètode de Persona i els getters i setters. És interessant veure com <strong>s&#39;ha sobreescrit el mètode mostrarPersona() en les classes heretades</strong>. El mètode es diu igual i crida al mètode de mostrarPersona() de Persona. En la crida del mètode principal, tant l&#39;objecte <strong>a</strong> (Alumne) com l&#39;objecte <strong>profe</strong> (Professor) poden fer ús del mètode mostrarPersona().</p>',6)),i(n,null,{default:l(()=>[i(t,{label:"Java"},{default:l(()=>[i(n,null,{default:l(()=>[i(t,{label:"Classe persona"},{default:l(()=>a[7]||(a[7]=[s("p",null,[s("img",{src:u,alt:"Classe Persona"})],-1)])),_:1,__:[7]}),i(t,{label:"Classe Alumne"},{default:l(()=>a[8]||(a[8]=[s("p",null,[s("img",{src:k,alt:"Classe Alumne"})],-1)])),_:1,__:[8]}),i(t,{label:"Classe Professor"},{default:l(()=>a[9]||(a[9]=[s("p",null,[s("img",{src:m,alt:"Classe Professor"})],-1)])),_:1,__:[9]}),i(t,{label:"Programa Principal"},{default:l(()=>a[10]||(a[10]=[s("p",null,[s("img",{src:g,alt:"Classe Principal"})],-1)])),_:1,__:[10]}),i(t,{label:"Eixida"},{default:l(()=>a[11]||(a[11]=[s("p",null,[s("img",{src:E,alt:"Eixida exemple 3"})],-1)])),_:1,__:[11]})]),_:1})]),_:1})]),_:1})])}const q=d(b,[["render",y]]);export{P as __pageData,q as default};
